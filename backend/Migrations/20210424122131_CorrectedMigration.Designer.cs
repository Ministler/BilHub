// <auto-generated />
using System;
using BilHub.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace BilHub.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20210424122131_CorrectedMigration")]
    partial class CorrectedMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.5")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("BilHub.Models.Assignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AcceptedTypes")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("AssignmentDescriptionFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("CanBeGradedByStudents")
                        .HasColumnType("bit");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.Property<int>("MaxFileSizeInBytes")
                        .HasColumnType("int");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.Property<bool>("VisibilityOfSubmission")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Assignments");
                });

            modelBuilder.Entity("BilHub.Models.Comment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CommentText")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("CommentedUserId")
                        .HasColumnType("int");

                    b.Property<bool>("FileAttachmentAvailability")
                        .HasColumnType("bit");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<bool>("GradeStatus")
                        .HasColumnType("bit");

                    b.Property<double>("MaxGrade")
                        .HasColumnType("float");

                    b.Property<int>("SubmissionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CommentedUserId");

                    b.HasIndex("SubmissionId");

                    b.ToTable("Comments");
                });

            modelBuilder.Entity("BilHub.Models.Course", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("CourseInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CourseSemester")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LockDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Courses");
                });

            modelBuilder.Entity("BilHub.Models.GroupSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("Size")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("GroupSizes");
                });

            modelBuilder.Entity("BilHub.Models.JoinRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AcceptedNumber")
                        .HasColumnType("int");

                    b.Property<int>("ProjectGroupId")
                        .HasColumnType("int");

                    b.Property<int>("RejectedNumber")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("VotedStudents")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectGroupId");

                    b.HasIndex("UserId");

                    b.ToTable("JoinRequests");
                });

            modelBuilder.Entity("BilHub.Models.MergeRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("ReceiverGroupId")
                        .HasColumnType("int");

                    b.Property<int>("SenderGroupId")
                        .HasColumnType("int");

                    b.Property<string>("VotedStudents")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ReceiverGroupId");

                    b.HasIndex("SenderGroupId");

                    b.ToTable("MergeRequests");
                });

            modelBuilder.Entity("BilHub.Models.PeerGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<double>("MaxGrade")
                        .HasColumnType("float");

                    b.Property<int?>("ProjectGroupId")
                        .HasColumnType("int");

                    b.Property<int>("RevieweeId")
                        .HasColumnType("int");

                    b.Property<int>("ReviewerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectGroupId");

                    b.HasIndex("RevieweeId");

                    b.HasIndex("ReviewerId");

                    b.ToTable("PeerGrades");
                });

            modelBuilder.Entity("BilHub.Models.PeerGradeAssignment", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignmentDescriptionFile")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CourseId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CourseId")
                        .IsUnique();

                    b.ToTable("PeerGradeAssignments");
                });

            modelBuilder.Entity("BilHub.Models.ProjectGrade", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AdditionalComment")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Grade")
                        .HasColumnType("float");

                    b.Property<double>("MaxGrade")
                        .HasColumnType("float");

                    b.Property<int>("ProjectGroupID")
                        .HasColumnType("int");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("ProjectGroupID");

                    b.HasIndex("UserId");

                    b.ToTable("ProjectGrades");
                });

            modelBuilder.Entity("BilHub.Models.ProjectGroup", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("ConfirmationState")
                        .HasColumnType("bit");

                    b.Property<int>("ConfirmedUserNumber")
                        .HasColumnType("int");

                    b.Property<int>("GroupSize")
                        .HasColumnType("int");

                    b.Property<string>("ProjectInformation")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SectionId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("ProjectGroups");
                });

            modelBuilder.Entity("BilHub.Models.Section", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("CourseId")
                        .HasColumnType("int");

                    b.Property<int>("SectionNo")
                        .HasColumnType("int");

                    b.Property<bool>("SectionlessState")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("CourseId");

                    b.ToTable("Sections");
                });

            modelBuilder.Entity("BilHub.Models.Submission", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AffiliatedAssignmentId")
                        .HasColumnType("int");

                    b.Property<string>("FilePath")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProjectGroupId")
                        .HasColumnType("int");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AffiliatedAssignmentId");

                    b.HasIndex("ProjectGroupId");

                    b.ToTable("Submissions");
                });

            modelBuilder.Entity("BilHub.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<bool>("DarkModeStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("LoginStatus")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("SecondPasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<int?>("SectionId")
                        .HasColumnType("int");

                    b.Property<int>("UserType")
                        .HasColumnType("int");

                    b.Property<bool>("VerifiedStatus")
                        .HasColumnType("bit");

                    b.HasKey("Id");

                    b.HasIndex("SectionId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.Property<int>("InstructedCoursesId")
                        .HasColumnType("int");

                    b.Property<int>("InstructorsId")
                        .HasColumnType("int");

                    b.HasKey("InstructedCoursesId", "InstructorsId");

                    b.HasIndex("InstructorsId");

                    b.ToTable("CourseUser");
                });

            modelBuilder.Entity("ProjectGroupUser", b =>
                {
                    b.Property<int>("GroupMembersId")
                        .HasColumnType("int");

                    b.Property<int>("ProjectGroupsId")
                        .HasColumnType("int");

                    b.HasKey("GroupMembersId", "ProjectGroupsId");

                    b.HasIndex("ProjectGroupsId");

                    b.ToTable("ProjectGroupUser");
                });

            modelBuilder.Entity("BilHub.Models.Assignment", b =>
                {
                    b.HasOne("BilHub.Models.Section", "AffiliatedSection")
                        .WithMany()
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedSection");
                });

            modelBuilder.Entity("BilHub.Models.Comment", b =>
                {
                    b.HasOne("BilHub.Models.User", "CommentedUser")
                        .WithMany("OutgoingComments")
                        .HasForeignKey("CommentedUserId");

                    b.HasOne("BilHub.Models.Submission", "CommentedSubmission")
                        .WithMany("Comments")
                        .HasForeignKey("SubmissionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CommentedSubmission");

                    b.Navigation("CommentedUser");
                });

            modelBuilder.Entity("BilHub.Models.GroupSize", b =>
                {
                    b.HasOne("BilHub.Models.Course", "AffiliatedCourse")
                        .WithMany("GroupSizes")
                        .HasForeignKey("CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedCourse");
                });

            modelBuilder.Entity("BilHub.Models.JoinRequest", b =>
                {
                    b.HasOne("BilHub.Models.ProjectGroup", "RequestedGroup")
                        .WithMany("IncomingJoinRequests")
                        .HasForeignKey("ProjectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilHub.Models.User", "RequestingStudent")
                        .WithMany("OutgoingJoinRequests")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("RequestedGroup");

                    b.Navigation("RequestingStudent");
                });

            modelBuilder.Entity("BilHub.Models.MergeRequest", b =>
                {
                    b.HasOne("BilHub.Models.ProjectGroup", "ReceiverGroup")
                        .WithMany("IncomingMergeRequest")
                        .HasForeignKey("ReceiverGroupId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilHub.Models.ProjectGroup", "SenderGroup")
                        .WithMany("OutgoingMergeRequest")
                        .HasForeignKey("SenderGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ReceiverGroup");

                    b.Navigation("SenderGroup");
                });

            modelBuilder.Entity("BilHub.Models.PeerGrade", b =>
                {
                    b.HasOne("BilHub.Models.ProjectGroup", null)
                        .WithMany("PeerGrades")
                        .HasForeignKey("ProjectGroupId");

                    b.HasOne("BilHub.Models.User", "Reviewee")
                        .WithMany("IncomingPeerGrades")
                        .HasForeignKey("RevieweeId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.HasOne("BilHub.Models.User", "Reviewer")
                        .WithMany("OutgoingPeerGrades")
                        .HasForeignKey("ReviewerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Reviewee");

                    b.Navigation("Reviewer");
                });

            modelBuilder.Entity("BilHub.Models.PeerGradeAssignment", b =>
                {
                    b.HasOne("BilHub.Models.Course", "AffiliatedCourse")
                        .WithOne("PeerGradeAssignment")
                        .HasForeignKey("BilHub.Models.PeerGradeAssignment", "CourseId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedCourse");
                });

            modelBuilder.Entity("BilHub.Models.ProjectGrade", b =>
                {
                    b.HasOne("BilHub.Models.ProjectGroup", "GradedProjectGroup")
                        .WithMany("ProjectGradings")
                        .HasForeignKey("ProjectGroupID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilHub.Models.User", "GradingUser")
                        .WithMany()
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("GradedProjectGroup");

                    b.Navigation("GradingUser");
                });

            modelBuilder.Entity("BilHub.Models.ProjectGroup", b =>
                {
                    b.HasOne("BilHub.Models.Section", "AffiliatedSection")
                        .WithMany("ProjectGroups")
                        .HasForeignKey("SectionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedSection");
                });

            modelBuilder.Entity("BilHub.Models.Section", b =>
                {
                    b.HasOne("BilHub.Models.Course", null)
                        .WithMany("Sections")
                        .HasForeignKey("CourseId");
                });

            modelBuilder.Entity("BilHub.Models.Submission", b =>
                {
                    b.HasOne("BilHub.Models.Assignment", "AffiliatedAssignment")
                        .WithMany("Submissions")
                        .HasForeignKey("AffiliatedAssignmentId");

                    b.HasOne("BilHub.Models.ProjectGroup", "AffiliatedGroup")
                        .WithMany("Submissions")
                        .HasForeignKey("ProjectGroupId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("AffiliatedAssignment");

                    b.Navigation("AffiliatedGroup");
                });

            modelBuilder.Entity("BilHub.Models.User", b =>
                {
                    b.HasOne("BilHub.Models.Section", null)
                        .WithMany("Students")
                        .HasForeignKey("SectionId");
                });

            modelBuilder.Entity("CourseUser", b =>
                {
                    b.HasOne("BilHub.Models.Course", null)
                        .WithMany()
                        .HasForeignKey("InstructedCoursesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilHub.Models.User", null)
                        .WithMany()
                        .HasForeignKey("InstructorsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("ProjectGroupUser", b =>
                {
                    b.HasOne("BilHub.Models.User", null)
                        .WithMany()
                        .HasForeignKey("GroupMembersId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("BilHub.Models.ProjectGroup", null)
                        .WithMany()
                        .HasForeignKey("ProjectGroupsId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("BilHub.Models.Assignment", b =>
                {
                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("BilHub.Models.Course", b =>
                {
                    b.Navigation("GroupSizes");

                    b.Navigation("PeerGradeAssignment");

                    b.Navigation("Sections");
                });

            modelBuilder.Entity("BilHub.Models.ProjectGroup", b =>
                {
                    b.Navigation("IncomingJoinRequests");

                    b.Navigation("IncomingMergeRequest");

                    b.Navigation("OutgoingMergeRequest");

                    b.Navigation("PeerGrades");

                    b.Navigation("ProjectGradings");

                    b.Navigation("Submissions");
                });

            modelBuilder.Entity("BilHub.Models.Section", b =>
                {
                    b.Navigation("ProjectGroups");

                    b.Navigation("Students");
                });

            modelBuilder.Entity("BilHub.Models.Submission", b =>
                {
                    b.Navigation("Comments");
                });

            modelBuilder.Entity("BilHub.Models.User", b =>
                {
                    b.Navigation("IncomingPeerGrades");

                    b.Navigation("OutgoingComments");

                    b.Navigation("OutgoingJoinRequests");

                    b.Navigation("OutgoingPeerGrades");
                });
#pragma warning restore 612, 618
        }
    }
}
